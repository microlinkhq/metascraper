name: main

on:
  push:
    branches:
      - master

jobs:
  contributors:
    if: "${{ github.event.head_commit.message != 'build: contributors' }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true
      - name: Contributors
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          pnpm run contributors
      - name: Push changes
        run: |
          git push origin ${{ github.head_ref }}
  matrix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - id: matrix
      run: echo "matrix=$(node .github/workflows/get-matrix.mjs)" >> $GITHUB_OUTPUT
    - run: echo ${{ steps.matrix.outputs.matrix }}
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
  test:
    if: |
      !startsWith(github.event.head_commit.message, 'chore(release):') &&
      !startsWith(github.event.head_commit.message, 'docs:') &&
      !startsWith(github.event.head_commit.message, 'ci:')
    needs: [contributors, matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true
      - name: Test
        run: pnpm run test --scope "${{ matrix.package }}"
        env:
          PROXY_USERNAME: ${{ secrets.PROXY_USERNAME }}
          PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
          PROXY_HOST: ${{ secrets.PROXY_HOST }}
      - name: Coverage
        run: pnpm run coverage
      - name: Upload
        uses: coverallsapp/github-action@main
        with:
          flag-name: ${{ matrix.package }}
          parallel: true
          allow-empty: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@main
      with:
        parallel-finished: true

